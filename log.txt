Torch version: 2.4.0+cu121
Starting preprocessing...
Preprocessing completed successfully.
Starting prediction...
Error executing command: python /home/node/Documents/dev/SPARK-DOCKER/predict.py -i imagesTs -o MedNext_Predictions -m 3d_fullres -f 4 --num_threads_preprocessing 1
Error message: Traceback (most recent call last):
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 27, in <module>
    from nnunet_mednext.inference.segmentation_export import (
ModuleNotFoundError: No module named 'nnunet_mednext'

Prediction failed. Exiting.
Torch version: 2.4.0+cu121
Starting preprocessing...
Preprocessing completed successfully.
Starting prediction...
Error executing command: python /home/node/Documents/dev/SPARK-DOCKER/predict.py -i imagesTs -o MedNext_Predictions -m 3d_fullres -f 4 --num_threads_preprocessing 1
Error message: Traceback (most recent call last):
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 27, in <module>
    from nnunet_mednext.inference.segmentation_export import (
ModuleNotFoundError: No module named 'nnunet_mednext'

Prediction failed. Exiting.
Torch version: 2.4.0+cu121
Starting preprocessing...
Preprocessing completed successfully.
Starting prediction...
Error executing command: python /home/node/Documents/dev/SPARK-DOCKER/predict.py -i imagesTs -o MedNext_Predictions -m 3d_fullres -f 4 --num_threads_preprocessing 1
Error message: /home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py:147: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
Traceback (most recent call last):
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 1183, in <module>
    predict_from_folder(
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 901, in predict_from_folder
    return predict_cases(
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 237, in predict_cases
    trainer, params = load_model_and_checkpoint_files(
  File "/home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py", line 147, in load_model_and_checkpoint_files
    all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
  File "/home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py", line 147, in <listcomp>
    all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
  File "/home/node/Documents/dev/SPARK-DOCKER/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1114, in load
    return _legacy_load(
  File "/home/node/Documents/dev/SPARK-DOCKER/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1338, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'v'.

Prediction failed. Exiting.
Torch version: 2.4.0+cu121
Starting preprocessing...
Preprocessing completed successfully.
Starting prediction...
Error executing command: python /home/node/Documents/dev/SPARK-DOCKER/predict.py -i imagesTs -o MedNext_Predictions -m 3d_fullres -f 4
Error message: /home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py:147: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
Traceback (most recent call last):
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 1183, in <module>
    predict_from_folder(
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 901, in predict_from_folder
    return predict_cases(
  File "/home/node/Documents/dev/SPARK-DOCKER/predict.py", line 237, in predict_cases
    trainer, params = load_model_and_checkpoint_files(
  File "/home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py", line 147, in load_model_and_checkpoint_files
    all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
  File "/home/node/Documents/dev/SPARK-DOCKER/mednext/nnunet_mednext/training/model_restore.py", line 147, in <listcomp>
    all_params = [torch.load(i, map_location=torch.device('cpu')) for i in all_best_model_files]
  File "/home/node/Documents/dev/SPARK-DOCKER/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1114, in load
    return _legacy_load(
  File "/home/node/Documents/dev/SPARK-DOCKER/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1338, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
_pickle.UnpicklingError: invalid load key, 'v'.

Prediction failed. Exiting.
